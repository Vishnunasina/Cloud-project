/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package multikeyword_search;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author CMP
 */
public class CSP1 extends javax.swing.JFrame {

    /**
     * Creates new form CSP
     */
    public CSP1() {
        try {
            initComponents();
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dual_cloud", "root", "");
        } catch (SQLException ex) {
            Logger.getLogger(CSP1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CSP1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        kk = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        name1 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        k = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        kkk = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(707, 20, 80, -1));

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 70, -1));

        jButton13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton13.setText("Search File");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 500, 140, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Keywords");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, 100, -1));

        kk.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(kk, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, 120, 30));

        jTable4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Cloud_ID", "Request_File"
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 340, 180));

        name1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 390, 210, 30));

        jButton11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton11.setText("Verify User");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 130, 30));

        k.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(k, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 140, 30));

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton8.setText("Download Request");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 160, -1));

        jButton12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton12.setText("Share Filename");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 500, 140, 30));

        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton10.setText("Downloaded Files");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 160, -1));

        jTable5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Cloud_ID", "Request_File"
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 340, 180));

        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton9.setText("Revoke Permission");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 500, 140, 30));

        kkk.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(kkk, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, 150, 30));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 70, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Secure Searches: A Fast & Accurate Privacy Preserving");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Retrieval System For Cloud Data");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cloud Service Provider");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 180, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blue.png"))); // NOI18N
        jLabel7.setText("jLabel3");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 580));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
String id, ui, uname, file, k1, k2, k3;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    public static <T> T mostCommon(List<T> list) {
        Map<T, Integer> map = new HashMap<>();

        for (T t : list) {
            Integer val = map.get(t);
            map.put(t, val == null ? 1 : val + 1);
        }

        Entry<T, Integer> max = null;

        for (Entry<T, Integer> e : map.entrySet()) {
            if (max == null || e.getValue() > max.getValue()) {
                max = e;
            }
        }

        return max.getKey();
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new CSP().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        List<Integer> fList = new ArrayList<>();

        try {

            Class.forName("com.mysql.jdbc.Driver");

            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/dual_cloud", "root", "");

            String sql = "SELECT * FROM cloud_files WHERE k1 = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);

            pstmt.setString(1, k1);

            ResultSet rs = pstmt.executeQuery();

            while (rs.next()) {
                int i = rs.getInt(1);
                fList.add(i);
            }
            String sql2 = "SELECT * FROM cloud_files WHERE k1 = ?";
            PreparedStatement pstmt2 = conn.prepareStatement(sql2);

            pstmt2.setString(1, k2);

            ResultSet rs1 = pstmt2.executeQuery();

            while (rs1.next()) {
                int i = rs1.getInt(1);
                fList.add(i);
            }
            String sql3 = "SELECT * FROM cloud_files WHERE k1 = ?";
            PreparedStatement pstmt3 = conn.prepareStatement(sql3);

            pstmt3.setString(1, k3);

            ResultSet rs3 = pstmt3.executeQuery();

            while (rs3.next()) {
                int i = rs3.getInt(1);
                fList.add(i);
            }

            String sql23 = "SELECT * FROM cloud_files WHERE k2 = ?";
            PreparedStatement pstmt23 = conn.prepareStatement(sql23);

            pstmt23.setString(1, k1);

            ResultSet rs2 = pstmt23.executeQuery();

            while (rs2.next()) {
                int i = rs2.getInt(1);
                fList.add(i);

            }
            String sql232 = "SELECT * FROM cloud_files WHERE k2 = ?";
            PreparedStatement pstmt232 = conn.prepareStatement(sql232);

            pstmt232.setString(1, k2);

            ResultSet rs22 = pstmt232.executeQuery();

            while (rs22.next()) {
                int i = rs22.getInt(1);
                fList.add(i);

            }
            String sql234 = "SELECT * FROM cloud_files WHERE k3 = ?";
            PreparedStatement pstmt234 = conn.prepareStatement(sql234);

            pstmt234.setString(1, k1);

            ResultSet rs24 = pstmt234.executeQuery();

            while (rs24.next()) {
                int i = rs24.getInt(1);
                fList.add(i);

            }
            String sql35 = "SELECT * FROM cloud_files WHERE k3 = ?";
            PreparedStatement pstmt35 = conn.prepareStatement(sql35);

            pstmt35.setString(1, k2);

            ResultSet rs35 = pstmt35.executeQuery();

            while (rs35.next()) {
                int i = rs35.getInt(1);
                fList.add(i);
            }
            String sql36 = "SELECT * FROM cloud_files WHERE k3 = ?";
            PreparedStatement pstmt36 = conn.prepareStatement(sql36);

            pstmt36.setString(1, k3);

            ResultSet rs36 = pstmt36.executeQuery();

            while (rs36.next()) {
                int i = rs36.getInt(1);
                fList.add(i);
            }

            Map<Integer, Integer> countMap = new HashMap<>();
            for (int num : fList) {
                countMap.put(num, countMap.getOrDefault(num, 0) + 1);
            }

            int b = 0;
            int maxCount = 0;
            for (int num : countMap.keySet()) {
                maxCount = Math.max(maxCount, countMap.get(num));
            }

            for (Map.Entry<Integer, Integer> entry : countMap.entrySet()) {
                if (entry.getValue() == maxCount) {
                    b = entry.getKey();
                }
            }
//            List<String> listDistinct = fList.stream().distinct().collect(Collectors.toList());
//
//            String collectDistinct = listDistinct.stream().collect(Collectors.joining(", "));
//            String[] result = collectDistinct.split(", ");

//            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
//Date date = new Date();
//System.out.println(formatter.format(date));
//
//Calendar calendar = Calendar.getInstance();
//calendar.setTime(date);
//calendar.add(Calendar.MINUTE, 10);
//
//Date newDate = calendar.getTime();
//SimpleDateFormat newFormatter = new SimpleDateFormat("MM/dd/yyyy hh:mm a");
//System.out.println(newFormatter.format(newDate));
            String sql33 = "SELECT * FROM cloud_files WHERE id = ?";
            PreparedStatement pstmt33 = conn.prepareStatement(sql33);
            Calendar cal = Calendar.getInstance();
            cal.setTimeZone(TimeZone.getTimeZone("UTC")); // Set time zone to UTC
            java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(cal.getTime().getTime());

            // Add ten minutes
            cal.add(Calendar.MINUTE, 10);
            java.sql.Timestamp tenMinutesLater = new java.sql.Timestamp(cal.getTime().getTime());

            // Format timestamps as strings
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            sdf.setTimeZone(TimeZone.getTimeZone("UTC")); // Set the time zone to UTC
            String currentTimestampString = sdf.format(new Date(currentTimestamp.getTime()));
            String tenMinutesLaterString = sdf.format(new Date(tenMinutesLater.getTime()));

//LocalDateTime currentDate = LocalDateTime.now();
//        LocalDateTime after10Minutes = currentDate.plus(10, ChronoUnit.MINUTES);
//            pstmt33.setString(1,mostCommon(fList) );
            System.out.println(b);
            pstmt33.setInt(1, b);
            ResultSet rs33 = pstmt33.executeQuery();
            Statement stmt = (Statement) conn.createStatement();

            while (rs33.next()) {
//                String sql333 = "INSERT INTO file_id (rid,uid,filename,fid,time) values ('" + id+ "','" +ui + "','" + rs33.getString(4) + "','" + mostCommon(fList) + "')";
//                 String sql333 = "INSERT INTO file_id (rid,uid,filename,fid,time) values ('" + id+ "','" +ui + "','" + rs33.getString(4) + "','" +b + "','" +newFormatter.format(newDate) + "')";
                String sql333 = "INSERT INTO file_id (rid,uid,filename,fid,time) values ('" + id + "','" + ui + "','" + rs33.getString(4) + "','" + b + "','" + tenMinutesLaterString + "')";
                System.out.println(sql333);
                stmt.executeUpdate(sql333);

            }

            System.out.println(fList);

            rs.close();
            pstmt.close();
            conn.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        JOptionPane.showMessageDialog(this, "Filename is retrieved!");

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        int row = jTable4.getSelectedRow();
        id = (jTable4.getModel().getValueAt(row, 0).toString());

        uname = (jTable4.getModel().getValueAt(row, 1).toString());
        k1 = (jTable4.getModel().getValueAt(row, 2).toString());
        k2 = (jTable4.getModel().getValueAt(row, 3).toString());
        k3 = (jTable4.getModel().getValueAt(row, 4).toString());
        ui = (jTable4.getModel().getValueAt(row, 5).toString());
        name1.setText(uname);
        k.setText(k1);
        kk.setText(k2);
        kkk.setText(k3);
    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int p = 0;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dual_cloud", "root", "")) {
                Statement stmt = con.createStatement();

                ResultSet rs = stmt.executeQuery("select * from details");
                while (rs.next()) {
                    String name = rs.getString(3);
                    if (name.equals(uname)) {
                        JOptionPane.showMessageDialog(this, "Valid User");
                        p = p + 1;
                        break;
                    }
                }
                if (p == 0) {
                    JOptionPane.showMessageDialog(this, "Not a Valid User");
                }
            }
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:      // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dual_cloud", "root", "")) {

                String sql;
                sql = "SELECT id,username,k1,k2,k3,uid,status FROM download where status='In progress' ";
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                jTable4.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(CSP1.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:

            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dual_cloud", "root", "");
            java.sql.Statement stmt = con.createStatement();
            ResultSet rs;

            String sql = "UPDATE download SET status = 'Permission Provided' WHERE id = '" + id + "'";
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(this, "Filename is successfully sended to User");
        } catch (SQLException ex) {
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dual_cloud", "root", "")) {

                String sql;
                sql = "SELECT id,username,filename,d_status FROM download where status='Permission Provided'";
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                jTable5.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException ex) {
                Logger.getLogger(CSP1.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable5MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:

            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/dual_cloud", "root", "");
            java.sql.Statement stmt = con.createStatement();
            ResultSet rs;

            String sql = "UPDATE download SET status = 'Rejected' WHERE id = '" + id + "'";
            stmt.executeUpdate(sql);
            JOptionPane.showMessageDialog(this, "User request is rejected");
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CSP1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CSP1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CSP1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CSP1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CSP1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField k;
    private javax.swing.JTextField kk;
    private javax.swing.JTextField kkk;
    private javax.swing.JTextField name1;
    // End of variables declaration//GEN-END:variables
}
